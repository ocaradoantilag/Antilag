-- Verificação de permissão
local Players = game:GetService("Players")
if Players.LocalPlayer.Name ~= "superlightzxs" then return end

--// Serviços
local RunService = game:GetService("RunService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local Camera = workspace.CurrentCamera

--// Configurações
local fov = 9
local teamCheck = false
local holdingMouse = false
local Settings = { Size = 1.50 }

--// Desenho do FOV
local FOVring = Drawing.new("Circle")
FOVring.Visible = false
FOVring.Thickness = 2
FOVring.Color = Color3.fromRGB(255, 0, 0)
FOVring.Filled = false
FOVring.Radius = fov
FOVring.Position = Camera.ViewportSize / 2

local function updateDrawings()
    FOVring.Position = Camera.ViewportSize / 2
end

local function isPlayerAlive(player)
    return player and player.Character and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health > 0
end

local function getClosestPlayerInFOV()
    local nearest = nil
    local shortestDistance = math.huge
    local centerScreen = Camera.ViewportSize / 2
    local localPlayer = Players.LocalPlayer

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= localPlayer and isPlayerAlive(player) and (not teamCheck or player.Team ~= localPlayer.Team) then
            local character = player.Character
            for _, part in ipairs(character:GetChildren()) do
                if part:IsA("BasePart") then
                    local screenPos, onScreen = Camera:WorldToViewportPoint(part.Position)
                    local distance = (Vector2.new(screenPos.X, screenPos.Y) - centerScreen).Magnitude

                    if onScreen and distance < fov and distance < shortestDistance then
                        shortestDistance = distance
                        nearest = player
                    end
                end
            end
        end
    end

    return nearest
end

local function holdMouse1(state)
    if state and not holdingMouse then
        holdingMouse = true
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
    elseif not state and holdingMouse then
        holdingMouse = false
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 0)
    end
end

local function ResizeHead(player)
    if player and player ~= Players.LocalPlayer and player.Character then
        local head = player.Character:FindFirstChild("Head")
        local humanoid = player.Character:FindFirstChild("Humanoid")
        if head and humanoid then
            head.Massless = true
            head.Transparency = 0.1
            head.Size = Vector3.new(Settings.Size, Settings.Size, Settings.Size)
            head.CanCollide = false
        end
    end
end

--// Aplicar redimensionamento nos jogadores atuais
for _, player in pairs(Players:GetPlayers()) do
    ResizeHead(player)
end

--// Aplicar em jogadores que entrarem
Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        ResizeHead(player)
    end)
end)

--// Loop Principal
RunService.RenderStepped:Connect(function()
    updateDrawings()
    local closestPlayer = getClosestPlayerInFOV()

    if closestPlayer then
        holdMouse1(true)
    else
        holdMouse1(false)
    end
end)

--// Hook para munição infinita
local old
old = hookmetamethod(game, "__index", function(this, index)
    if not checkcaller() and tostring(this) == "CurrentAmmo" and index == "Value" then
        return 2
    end
    return old(this, index)
end)
